#!/bin/bash

DRIVE_UUID="60de9138-ba67-4862-baf0-4f644fcfe965"

PATHS_TO_BACKUP=$(cat <<- EOM
/home/adam/life /home/adam/media /home/adam/studies
/home/adam/var/playground /home/adam/Mail /home/adam/.abook /home/adam/.mbsyncrc
EOM
)

BW_PASS_NAME="TOSHIBA restic backup"

check_drive() {
    lsblk -o UUID,NAME | grep "$DRIVE_UUID" &> /dev/null
    return $?
}

mount_drive() {
    echo "Mounting drive..."
    MOUNT_PATH=$(udisksctl mount -b /dev/disk/by-uuid/$DRIVE_UUID | cut -d ' ' -f 4)
    if [ $? -eq 0 ]; then
        echo "Drive mounted at $MOUNT_PATH"
        return 0
    else
        echo "Failed to mount drive."
        return 1
    fi
}

unmount_drive() {
    echo "Unmounting drive..."
    udisksctl unmount -b /dev/disk/by-uuid/$DRIVE_UUID > /dev/null
    if [ $? -eq 0 ]; then
        echo "Drive unmounted."
        return 0
    else
        echo "Failed to unmount drive."
        return 1
    fi
}

perform_backup() {
    echo "Performing backup..."
    bw_session=$(bw unlock --raw || bw login --raw)
    bw export --session "$bw_session" --format encrypted_json --output "$MOUNT_PATH/bw/"
    restic_pwd=$(bw get password "$BW_PASS_NAME" --session "$bw_session")
    echo "$restic_pwd" | restic backup -r "$MOUNT_PATH/restic-backup" $PATHS_TO_BACKUP --exclude 'site-packages'
    if [ $? -eq 0 ]; then
        echo "Backup successful."
        return 0
    else
        echo "Backup failed."
        return 1
    fi
}

if check_drive; then
    echo "Drive detected."

    mount_drive
    if [ $? -eq 0 ]; then
        perform_backup
        unmount_drive
    fi
else
    echo "Drive not detected. (UUID: $DRIVE_UUID)"
fi
